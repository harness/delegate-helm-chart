{{- if .Values.upgrader.enabled -}}
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    {{- include "harness-delegate-ng.labels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
      {{- include "harness-delegate-ng.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations:
    {{- include "harness-delegate-ng.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
  name: {{ template "harness-delegate-ng.fullname" . }}-upgrader-job
  namespace: {{ .Release.Namespace }}
spec:
  schedule: {{ .Values.upgrader.schedule | quote }}
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 20
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: {{ template "harness-delegate-ng.fullname" . }}-{{ .Values.upgrader.cronJobServiceAccountName }}
          restartPolicy: Never
          {{- if .Values.upgrader.imagePullSecret }}
          imagePullSecrets:
          - name: {{ .Values.upgrader.imagePullSecret }}
          {{- end }}
          securityContext:
            fsGroup: 1001
          containers:
            - name: upgrader
              {{- if and .Values.upgrader.image.registry .Values.upgrader.image.repository}}
              image: {{ $.Values.upgrader.image.registry }}/{{ .Values.upgrader.image.repository }}:{{ .Values.upgrader.image.tag | default "latest" }}
              {{- else if .Values.upgrader.image.repository }}
              image: {{ .Values.upgrader.image.repository }}:{{ .Values.upgrader.image.tag | default "latest"}}
              {{- else }}
              image: {{ .Values.upgrader.upgraderDockerImage }}
              {{- end }}
              imagePullPolicy: {{ .Values.upgrader.image.pullPolicy }}
              {{- if .Values.upgrader.securityContext }}
              securityContext:
                {{- toYaml .Values.upgrader.securityContext | nindent 16 }}
              {{- end }}
              envFrom:
                - secretRef:
                    name: {{ include "harness-delegate-ng.upgraderDelegateToken" . }}
              volumeMounts:
              {{- if $.Values.upgraderCustomCa.secretName }}
                - name: custom-certs
                  mountPath: /ca-bundle
                  readOnly: true
              {{- end }}
              {{- if .Values.mTLS.secretName }}
                - name: client-certificate
                  mountPath: /etc/mtls
                  readOnly: true
              {{- end }}
                - name: config-volume
                  mountPath: /etc/config
              {{- if .Values.upgrader.resources }}
              resources:
                {{- toYaml .Values.upgrader.resources | nindent 16 }}
              {{- end }}
          volumes:
          {{- if $.Values.upgraderCustomCa.secretName }}
            - name: custom-certs
              secret:
                secretName: {{ .Values.upgraderCustomCa.secretName }}
                defaultMode: 400
          {{- end }}
          {{- if .Values.mTLS.secretName }}
            - name: client-certificate
              secret:
                secretName: {{ .Values.mTLS.secretName }}
          {{- end }}
            - name: config-volume
              configMap:
                name: {{ template "harness-delegate-ng.fullname" . }}-upgrader-config
{{- end }}
